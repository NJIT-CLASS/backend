(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.FlatToNested=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){module.exports=function(){"use strict";function FlatToNested(config){this.config=config=config||{};this.config.id=config.id||"id";this.config.parent=config.parent||"parent";this.config.children=config.children||"children";this.config.options=config.options||{deleteParent:true}}FlatToNested.prototype.convert=function(flat){var i,len,temp,roots,id,parent,nested,pendingChildOf,flatEl;i=0;roots=[];temp={};pendingChildOf={};for(i,len=flat.length;i<len;i++){flatEl=flat[i];id=flatEl[this.config.id];parent=flatEl[this.config.parent];temp[id]=flatEl;if(parent===undefined||parent===null){roots.push(flatEl)}else{if(temp[parent]!==undefined){initPush(this.config.children,temp[parent],flatEl)}else{initPush(parent,pendingChildOf,flatEl)}if(this.config.options.deleteParent){delete flatEl[this.config.parent]}}if(pendingChildOf[id]!==undefined){multiInitPush(this.config.children,flatEl,pendingChildOf[id])}}if(roots.length===1){nested=roots[0]}else if(roots.length>1){nested={};nested[this.config.children]=roots}else{nested={}}return nested};function initPush(arrayName,obj,toPush){if(obj[arrayName]===undefined){obj[arrayName]=[]}obj[arrayName].push(toPush)}function multiInitPush(arrayName,obj,toPushArray){var len;len=toPushArray.length;if(obj[arrayName]===undefined){obj[arrayName]=[]}while(len-- >0){obj[arrayName].push(toPushArray.shift())}}return FlatToNested}()},{}]},{},[1])(1)});
